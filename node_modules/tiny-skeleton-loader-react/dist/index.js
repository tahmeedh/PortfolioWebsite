'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ".styles_skeleton__2Mj1U {\n  line-height: 1;\n  display: inline-block;\n  overflow: hidden;\n  position: relative;\n  background: #eff1f6;\n}\n\n.styles_skeleton__2Mj1U::before {\n  content: \"\";\n  position: absolute;\n  height: 100%;\n  width: 500px;\n  top: 0;\n  left: -500px;\n  background-image: linear-gradient(\n    90deg,\n    rgba(255, 255, 255, 0),\n    rgba(255, 255, 255, 0.6),\n    rgba(255, 255, 255, 0)\n  );\n  animation: styles_skeleton-progress__o4fxe 1.2s ease-in-out infinite;\n}\n\n@keyframes styles_skeleton-progress__o4fxe {\n  0% {\n    left: -500px;\n  }\n  100% {\n    left: 100%;\n  }\n}\n";
var css$1 = {"skeleton":"styles_skeleton__2Mj1U","skeleton-progress":"styles_skeleton-progress__o4fxe"};
styleInject(css);

function SkeletonLoader(_a) {
    var _b = _a.width, width = _b === void 0 ? "100%" : _b, _c = _a.height, height = _c === void 0 ? "1em" : _c, _d = _a.background, background = _d === void 0 ? "#E9ECEF" : _d, _e = _a.radius, radius = _e === void 0 ? "4px" : _e, _f = _a.circle, circle = _f === void 0 ? false : _f, _g = _a.block, block = _g === void 0 ? true : _g, _h = _a.style, style = _h === void 0 ? {} : _h;
    return (React.createElement("div", { className: css$1.skeleton, style: __assign({ width: width,
            height: height,
            background: background, borderRadius: circle ? "50%" : radius, display: block ? "block" : "inline-block" }, style) }, "\u200C"));
}

exports.default = SkeletonLoader;
//# sourceMappingURL=index.js.map
