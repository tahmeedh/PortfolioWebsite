import { ExpressionStatement, Node } from 'estree';
import { Attacher } from 'unified';
export interface WithParent {
    parent?: NodeWithParent;
}
export declare type NodeWithParent = Node & WithParent;
export interface ExpressionStatementWithParent extends ExpressionStatement, WithParent {
}
export declare type RemarkPlugin = string | Attacher;
export interface RemarkConfig {
    settings: Record<string, string>;
    plugins: Array<RemarkPlugin | [RemarkPlugin, ...unknown[]]>;
}
//# sourceMappingURL=types.d.ts.map