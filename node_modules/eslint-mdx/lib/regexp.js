// based on https://github.com/mdx-js/mdx/blob/master/packages/remark-mdx/tag.js
var dotAllPolyfill = '[\0-\uFFFF]';
var attributeName = '[a-zA-Z_:][a-zA-Z0-9:._-]*';
var unquoted = '[^"\'=<>`\\u0000-\\u0020]+';
var singleQuoted = "'[^']*'";
var doubleQuoted = '"[^"]*"';
var jsProps = '{.*}'.replace('.', dotAllPolyfill);
var attributeValue = '(?:' +
    unquoted +
    '|' +
    singleQuoted +
    '|' +
    doubleQuoted +
    '|' +
    jsProps +
    ')';
var attribute = '(?:\\s+' + attributeName + '(?:\\s*=\\s*' + attributeValue + ')?)';
export var openTag = '<[A-Za-z]*[A-Za-z0-9\\.\\-]*' + attribute + '*\\s*>';
export var closeTag = '<\\s*\\/[A-Za-z]*[A-Za-z0-9\\.\\-]*\\s*>';
export var selfClosingTag = '<[A-Za-z]*[A-Za-z0-9\\.\\-]*' + attribute + '*\\s*\\/?>';
export var comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';
export var commentOpen = '(<!---*)';
export var commentClose = '(-*-->)';
export var OPEN_TAG_REGEX = new RegExp("^(?:" + openTag + ")$");
export var CLOSE_TAG_REGEX = new RegExp("^(?:" + closeTag + ")$");
export var OPEN_CLOSE_TAG_REGEX = new RegExp("^(?:" + (openTag + '[\\s\\S]*' + closeTag) + ")$");
export var SELF_CLOSING_TAG_REGEX = new RegExp("^(?:" + selfClosingTag + ")$");
export var COMMENT_REGEX = new RegExp("^(?:" + comment + ")$");
export var COMMENT_CONTENT_REGEX = new RegExp(commentOpen + "([\\s\\S]*?)" + commentClose, 'g');
export var isOpenTag = function (text) { return OPEN_TAG_REGEX.test(text); };
export var isCloseTag = function (text) { return CLOSE_TAG_REGEX.test(text); };
export var isComment = function (text) { return COMMENT_REGEX.test(text); };
// the following functions are only declared for robustness and should never be called
/* istanbul ignore next */
export var isOpenCloseTag = function (text) { return OPEN_CLOSE_TAG_REGEX.test(text); };
// prettier-ignore
/* istanbul ignore next */
export var isSelfClosingTag = function (text) { return SELF_CLOSING_TAG_REGEX.test(text); };
//# sourceMappingURL=regexp.js.map